<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eiger - A young gopher</title>
    <link>https://azd1997.github.io/</link>
    <description>Recent content on Eiger - A young gopher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 Sep 2019 04:52:16 +0800</lastBuildDate>
    
	<atom:link href="https://azd1997.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>计算机网络01——体系结构</title>
      <link>https://azd1997.github.io/post/cs/cn01/</link>
      <pubDate>Mon, 30 Sep 2019 04:52:16 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/cs/cn01/</guid>
      <description>知识结构图 1. 计算机网络概述 2. 体系结构与参考模型</description>
    </item>
    
    <item>
      <title>实现一个简单的HTTP服务器</title>
      <link>https://azd1997.github.io/post/cs/simplehttpserver/</link>
      <pubDate>Sat, 28 Sep 2019 03:16:29 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/cs/simplehttpserver/</guid>
      <description>1. 构建TCP服务器 1.1. 包装TCPServer类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 # simpleHttpServer/server/socket_server.py import</description>
    </item>
    
    <item>
      <title>数据结构与算法（2）——数组</title>
      <link>https://azd1997.github.io/post/algo/dsa02/</link>
      <pubDate>Thu, 26 Sep 2019 22:05:29 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/dsa02/</guid>
      <description>1. 导语 为什么数组下表从0开始而非1开始？ 2. 如何实现随机访问 数组(array) 是一种线性表数据结构，用一组连续的内存空间，存储一组相同类型的数</description>
    </item>
    
    <item>
      <title>Go语言学习笔记</title>
      <link>https://azd1997.github.io/post/go/go-learning-note/</link>
      <pubDate>Thu, 12 Sep 2019 05:00:45 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/go/go-learning-note/</guid>
      <description>Go语言学习笔记 1. 文件操作</description>
    </item>
    
    <item>
      <title>JavaSE核心编程笔记</title>
      <link>https://azd1997.github.io/post/java/javase/</link>
      <pubDate>Thu, 05 Sep 2019 02:55:16 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/java/javase/</guid>
      <description>JavaSE核心编程笔记</description>
    </item>
    
    <item>
      <title>计算机科学中一些常用术语</title>
      <link>https://azd1997.github.io/post/cs/concepts/</link>
      <pubDate>Thu, 22 Aug 2019 11:00:49 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/cs/concepts/</guid>
      <description>计算机科学中一些常用术语 1. 原语 原语操作 原子操作 原语 内核或微核提供核外调用的过程或函数称为原语(primitive)。 原语是一段用机器指令编写</description>
    </item>
    
    <item>
      <title>edgeX安装使用全系列</title>
      <link>https://azd1997.github.io/post/iot/edgex/</link>
      <pubDate>Wed, 21 Aug 2019 01:54:34 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/iot/edgex/</guid>
      <description>edgeX安装使用全系列 1. 开发者篇 1.1 介绍 EdgeX Foundry是一组为边缘网关平台提供的微服务集合，还包含了一系列的SDK。主要的SDK编写语言为</description>
    </item>
    
    <item>
      <title>Makefile学习全系列</title>
      <link>https://azd1997.github.io/post/linux/makefile/</link>
      <pubDate>Sat, 17 Aug 2019 04:45:58 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/linux/makefile/</guid>
      <description>Makefile学习全系列</description>
    </item>
    
    <item>
      <title>git学习全系列</title>
      <link>https://azd1997.github.io/post/linux/git/</link>
      <pubDate>Sat, 17 Aug 2019 04:44:28 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/linux/git/</guid>
      <description>git学习全系列 1. 修改commit消息 https://www.cnblogs.com/revel171226/p/9208589.html 2. Pull&amp;amp;Request https://blog.csdn.net/qq_33429968/article/details/62219783 3. 合并多条commit消息 https://blog.csdn.net/u013276277/article/details/82470177 4. 删除仓库下所有文件但不删除仓库 https://www.cnblogs.com/Ghost4C-QH/p/8777744.html 5. 与远程仓库建立连接 5.1 建立关联 1</description>
    </item>
    
    <item>
      <title>docker学习全系列</title>
      <link>https://azd1997.github.io/post/linux/docker/</link>
      <pubDate>Sat, 17 Aug 2019 04:42:16 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/linux/docker/</guid>
      <description>docker学习全系列 参考： 阮一峰博客: http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html http://www.ruanyifeng.com/blog/2018/02/docker-wordpress-tutorial.html docker-compose安装 从https://github.com/docker/compo</description>
    </item>
    
    <item>
      <title>mainflux源码阅读全系列</title>
      <link>https://azd1997.github.io/post/iot/mainfluxcodereading/</link>
      <pubDate>Sat, 17 Aug 2019 03:32:15 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/iot/mainfluxcodereading/</guid>
      <description>mainflux源码阅读 mongodb-writer</description>
    </item>
    
    <item>
      <title>IotHub物联网平台搭建：从0到1</title>
      <link>https://azd1997.github.io/post/iot/iothub/</link>
      <pubDate>Sat, 17 Aug 2019 02:55:10 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/iot/iothub/</guid>
      <description>Iothub物联网平台搭建：从0到1 1. 项目介绍 2. 准备工作台 本节安装开发物联网平台用到的组件，并将开发环境搭建起来。 2.1 安装组件 在安装组件前建议</description>
    </item>
    
    <item>
      <title>安装mainflux全系列</title>
      <link>https://azd1997.github.io/post/iot/installmainflux/</link>
      <pubDate>Sat, 17 Aug 2019 02:47:50 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/iot/installmainflux/</guid>
      <description>安装mainflux 安装mainflux 1.环境准备 2.protoc安装 3. GNU MAKE安装 4. mainflux编译 4.1 获取mainflux源码 4.2. 编</description>
    </item>
    
    <item>
      <title>安装Ubuntu及其他相关使用教程</title>
      <link>https://azd1997.github.io/post/linux/installubuntu/</link>
      <pubDate>Sat, 17 Aug 2019 02:04:01 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/linux/installubuntu/</guid>
      <description>通过U盘安装Ubuntu 1. 安装 准备好ubuntu镜像文件、rufus(用于制作启动盘，也可以选择别的类似的工具，如UltraISO)、空U盘</description>
    </item>
    
    <item>
      <title>Go语言协程池</title>
      <link>https://azd1997.github.io/post/go/01_goroutinepool/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/go/01_goroutinepool/</guid>
      <description>1. Golang并发三件套 ​ 这里不作过多介绍：goroutine、channel、select。goroutine是go语言的协程机制，cha</description>
    </item>
    
    <item>
      <title>Iro——树莓派安装魔镜、语音助手、智能家居全系列</title>
      <link>https://azd1997.github.io/post/linux/iro-raspi/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/linux/iro-raspi/</guid>
      <description>Iro——树莓派安装魔镜、语音助手、智能家居全系列 1. 树莓派安装系统及SSH连接 1.1 安装系统 ​进入树莓派官网下载树莓派带桌面版本系统镜像，使用W</description>
    </item>
    
    <item>
      <title>Spring Boot实战01——创建Spring Boot应用</title>
      <link>https://azd1997.github.io/post/java/springboot/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/java/springboot/</guid>
      <description>创建Spring Boot应用 1. 安装IdeaU ​ 官网下载即可，学生等可以申请免费使用。 2. 创建Spring Boot应用 如果报错： 解决办法：fil</description>
    </item>
    
    <item>
      <title>单元测试</title>
      <link>https://azd1997.github.io/post/go/03_testing/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/go/03_testing/</guid>
      <description>1.测试介绍 ​ 尽量测试，避免调试 2. 例子 ​ 这里使用一道算法题作为调试和测试的例子： ​ 求取字符串中最长的含有不重复字符的子字符串的长度。 2.1 开始之</description>
    </item>
    
    <item>
      <title>寻找最长不重复子字符串</title>
      <link>https://azd1997.github.io/post/algo/01_longestnonrepeatsubstring/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/01_longestnonrepeatsubstring/</guid>
      <description>求取字符串中最长的含有不重复字符的子字符串的长度。 1 开始之前 先了解下Go语言字符串的处理机制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 func compareBytesStringRune(s string)</description>
    </item>
    
    <item>
      <title>彩色日志库实现</title>
      <link>https://azd1997.github.io/post/go/01_colorlog/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/go/01_colorlog/</guid>
      <description>https://www.zybuluo.com/aliasliyu4/note/612147</description>
    </item>
    
    <item>
      <title>资源管理与出错处理</title>
      <link>https://azd1997.github.io/post/go/02_unifiederrorhandling/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/go/02_unifiederrorhandling/</guid>
      <description>Catch All The Errors! 1. 资源管理与defer调用 defer调用特点： 确保函数结束时发生 多个defer倒序执行 例子： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import &amp;#34;fmt&amp;#34; func</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://azd1997.github.io/links/</link>
      <pubDate>Tue, 23 Jul 2019 10:35:00 +0800</pubDate>
      
      <guid>https://azd1997.github.io/links/</guid>
      <description>网址链接 Hugo官网：https://gohugo.io Go语言中文网：https://studygolang.com/</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://azd1997.github.io/about/</link>
      <pubDate>Mon, 22 Jul 2019 22:04:02 +0800</pubDate>
      
      <guid>https://azd1997.github.io/about/</guid>
      <description>何计长来此，闲眠过一生 你好，我是Eiger，坐标广州。目前学习领域涉及go语言、区块链、物联网等</description>
    </item>
    
  </channel>
</rss>