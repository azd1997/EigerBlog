<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on Eiger - A young gopher</title>
    <link>https://azd1997.github.io/tags/leetcode/</link>
    <description>Recent content in leetcode on Eiger - A young gopher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 08 Nov 2019 08:33:08 +0800</lastBuildDate>
    
	<atom:link href="https://azd1997.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode21——合并两个有序链表</title>
      <link>https://azd1997.github.io/post/algo/lt21/</link>
      <pubDate>Fri, 08 Nov 2019 08:33:08 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/lt21/</guid>
      <description>解法二超越100%golang提交 题意 将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。 示例： 1 2</description>
    </item>
    
    <item>
      <title>Leetcode88——合并两个有序数组</title>
      <link>https://azd1997.github.io/post/algo/lt88/</link>
      <pubDate>Fri, 08 Nov 2019 01:59:13 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/lt88/</guid>
      <description>题意 给定两个有序整数数组 nums1 和 nums2，将 nums2 合并到 nums1 中，使得 num1 成为一个有序数组。 说明: 初始化 nums1 和 nums2 的元素数量分别为 m 和 n。 你可以假设 nums1 有足够</description>
    </item>
    
    <item>
      <title>Leetcode189——旋转数组</title>
      <link>https://azd1997.github.io/post/algo/lt189/</link>
      <pubDate>Wed, 06 Nov 2019 22:36:36 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/lt189/</guid>
      <description>1. 题意 给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。 示例 1: 1 2 3 4 5 6 输入: [1,2,3,4,5,6,7] 和 k = 3 输出: [5,6,7,1,2,3,4] 解释: 向右旋转 1 步: [7,1,2,3,4,5,6] 向右旋转</description>
    </item>
    
    <item>
      <title>Leetcode26——删除排序数组的重复项</title>
      <link>https://azd1997.github.io/post/algo/lt26/</link>
      <pubDate>Wed, 06 Nov 2019 05:20:19 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/lt26/</guid>
      <description>1. 题意 难度： easy 给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。 不要使用额外的数组空间，你必</description>
    </item>
    
    <item>
      <title>寻找最长不重复子字符串</title>
      <link>https://azd1997.github.io/post/algo/01_longestnonrepeatsubstring/</link>
      <pubDate>Tue, 23 Jul 2019 10:37:14 +0800</pubDate>
      
      <guid>https://azd1997.github.io/post/algo/01_longestnonrepeatsubstring/</guid>
      <description>求取字符串中最长的含有不重复字符的子字符串的长度。 1 开始之前 先了解下Go语言字符串的处理机制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 func compareBytesStringRune(s string)</description>
    </item>
    
  </channel>
</rss>